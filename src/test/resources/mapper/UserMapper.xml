<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2023 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sirius.mybatis.mapper.UserMapper">
  <!--type：cache使用的类型，默认是PerpetualCache，这在一级缓存中提到过。
    eviction： 定义回收的策略，常见的有FIFO，LRU。
    flushInterval： 配置一定时间自动刷新缓存，单位是毫秒。
    size： 最多缓存对象的个数。
    readOnly： 是否只读，若配置可读写，则需要对应的实体类能够序列化。
    blocking： 若缓存中找不到对应的key，是否会一直blocking，直到有对应的数据进入缓存。
    -->
  <!--<cache></cache>-->

  <!--<insert id="doCreate" parameterType="User" keyProperty="id" keyColumn="id" useGeneratedKeys="true">-->
<!--  <insert id="doCreate" parameterType="User">
    insert into user(username) values (#{username});
    <selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>-->

  <select id="findById" parameterType="int" resultType="com.sirius.mybatis.entity.User">
    SELECT id,username from user where id = #{id}
  </select>

  <update id="update" parameterType="com.sirius.mybatis.entity.User" >
    update user set username = #{username} where id = #{id}
  </update>


  <!--<resultMap id="UserMap" type="User">
    &lt;!&ndash; 关联配置 &ndash;&gt;
    <association property="" column="" javaType="" select=""/>
  </resultMap>-->
</mapper>
